/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import { Color, MeshStandardMaterial } from "three";
import { useMaterialStore } from "../UI/EditUI";

export default function Glove(props) {
  const { nodes, materials } = useGLTF("./models/glove_uv.glb");

  const color = useMaterialStore((state) => state.color); // Current wrist color

  // Define the hue map for metallic colors
  const hueMap = {
    "#0072CE": "#609DD0", // Metallic Blue → Light Blue
    "#00B3C0": "#80D9D6", // Metallic Aqua → Pale Aqua
    "#CB1476": "#E377A4", // Metallic Fuchsia → Soft Pink
    "#D4AF37": "#F3C469", // Metallic Gold → Light Gold
    "#C0C0C0": "#E0E0E0", // Metallic Silver → Light Silver
    "#01C764": "#66E59A", // Metallic Green → Pale Green
    "#EB1F00": "#FF7B66", // Metallic Red → Light Red
    "#800080": "#B566B5", // Metallic Purple → Light Purple
    "#FACEB4": "#FFE5D8", // Metallic Champagne → Pale Peach
  };

  // Get the text color from the hue map
  const textColor = hueMap[color] || "#FFFFFF"; // Default to white if color is not found

  // Memoize the material for "Made for Champions" text
  const madeForChampionsMat = useMemo(() => {
    return new MeshStandardMaterial({
      color: new Color(textColor), // Use the mapped text color
      roughness: 0.6, // Matte finish
      metalness: 0.1, // Subtle metallic sheen
    });
  }, [textColor]);

  return (
    <group {...props} dispose={null}>
      {/* Other meshes */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.black.geometry}
        material={materials["Material.001"]}
        position={[0.004, -0.57, 0.137]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palmback.geometry}
        material={materials["Material.002"]}
        position={[0, 0.141, 0.173]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.wristback.geometry}
        material={materials["Material.003"]}
        position={[0, 0.141, 0.173]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piping.geometry}
        material={materials["Material.004"]}
        position={[0.002, -0.601, 0.1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.stitches.geometry}
        material={materials["Material.014"]}
        position={[-0.013, -0.153, -0.017]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tstrip.geometry}
        material={materials["Material.005"]}
        position={[0, 0, 0.209]}
      />
      <group position={[0, 0.097, 0.173]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_15.geometry}
          material={materials["Material.006"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_15_1.geometry}
          material={materials.Holes}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.connect.geometry}
        material={materials["Material.007"]}
        position={[-0.621, 1.295, -0.279]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.thumbin.geometry}
        material={materials["Material.008"]}
        position={[-0.426, 0.593, -0.2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.thumbout.geometry}
        material={materials["Material.009"]}
        position={[-0.799, 0.327, 0.173]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Lace_left.geometry}
        material={materials["Material.010"]}
        position={[0.01, -0.76, -0.201]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Lace_right.geometry}
        material={materials["Material.010"]}
        position={[0.01, -0.76, -0.201]}
        rotation={[-Math.PI, 0, 0]}
        scale={-1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.madeforchampions.geometry}
        material={madeForChampionsMat} // Apply mapped text material
        position={[0.008, -0.942, 0.559]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.564}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane001.geometry}
        material={materials.Flag}
        position={[0.018, -1.431, 0.373]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.786}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane006.geometry}
        material={materials["HECHO EN MEXICO"]}
        position={[0.018, -1.431, 0.363]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.334, 0.648, 0.067]}
      />
    </group>
  );
}

useGLTF.preload("./models/glove_uv.glb");
